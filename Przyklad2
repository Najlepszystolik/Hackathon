package pl.codeme.obiekty;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.Properties;
import java.util.Set;

import pl.codeme.obiekty.klasy.Czlowiek;

public class Przyklad2 {

	public static void main(String[] args)  {
		listProperties(System.getProperties());
//		createProperties();IOException
		
//		listProperties(loadProperties());
//		saveCzlowiek();
//		Czlowiek cz = loadCzlowiek();
//		System.out.println(cz.getWiek());

		try (FileInputStream fis = new FileInputStream("czlowiek.serialized")) {
			//  jakiĹ› kod
		} catch (Exception e) {}
	}

	private static Czlowiek loadCzlowiek() {
	   Czlowiek czlowiek = null;

	   try {
	     ObjectInputStream ois = new ObjectInputStream(new FileInputStream("czlowiek.serialized"));
	     czlowiek = (Czlowiek)ois.readObject();
	   } catch (Exception e) {};
	   
	   return czlowiek;
	}
	
	private static void saveCzlowiek() {
		try {
			ObjectOutputStream oos = new ObjectOutputStream(
					new FileOutputStream("czlowiek.serialized")
			);
			oos.writeObject(new Czlowiek());
			oos.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	private static Properties loadProperties() {
		Properties props = new Properties();

		try {
			props.load(new FileInputStream("moje.properties"));
		} catch (Exception e) {}
		
		return props;
	}
	
	private static void createProperties() {
		Properties props = new Properties();

		props.setProperty("przyklad 1", "Wartosc 1");
		props.setProperty("przyklad 5", "Wartosc 3");
		props.setProperty("przyklad 6", "Wartosc 2");
		
		try {
			props.store(new FileOutputStream("moje.properties"), "Komentarz");
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	private static void listProperties(Properties props) {
//		Set<Object> keySet = props.keySet();
//		Object[] keys = keySet.toArray();

		Object[] keys = props.keySet().toArray();

		for(int i=0; i<keys.length; i++) {
			String key = (String)keys[i];
			System.out.println(i + ". " + key + ": " + props.getProperty(key));
		}
		
		//props.list(System.out);
	}
}
